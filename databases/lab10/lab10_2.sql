-- 1 Исследовать и проиллюстрировать на примерах
-- различные уровни изоляции транзакций MS SQL Server,
-- устанавливаемые с использованием
-- инструкции SET TRANSACTION ISOLATION LEVEL

USE lab10;
GO

-- всего 4 уровня изоляции в стандарте SQL92
-- и 3 проблемы изоляции

-- 1) незавершенное чтение (read uncommited)

-- Низший (первый) уровень изоляции. Он гарантирует только отсутствие потерянных обновлений. 
-- Если несколько параллельных транзакций пытаются изменять одну и ту же строку таблицы, то в окончательном варианте 
-- строка будет иметь значение, определенное всем набором успешно выполненных транзакций.
-- При этом возможно считывание не только логически несогласованных данных, но и данных, изменения которых ещё не зафиксированы.
-- Транзакции, выполняющие только чтение, при данном уровне изоляции никогда не блокируются.

-- «Грязное» чтение» (dirty read) 
-- - чтение транзакцией записи, измененной другой транзакцией, при этом эти изменения еще не зафиксированы;
-- - чтение данных, добавленных или изменённых транзакцией, которая впоследствии не подтвердится (откатится).

/*
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
BEGIN TRANSACTION;
	--UPDATE Book SET PublishingHouse = CONCAT_WS('_', Book.PublishingHouse, 'Мир') WHERE BookID = 5;
	SELECT * FROM Book;
COMMIT TRANSACTION;
GO
*/

-- 2) завершенное чтение (read commited)

-- Этот уровень уже запрещает грязное чтение, в данном случае все процессы, запросившие данные, которые изменяются в тот же
-- момент в другой транзакции, будут ждать завершения этой транзакции и подтверждения фиксации данных. 
-- Данный уровень по умолчанию используется SQL сервером.

/*
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
BEGIN TRANSACTION;
    SELECT * FROM Book;	
	WAITFOR DELAY '00:00:05';
	SELECT * FROM Book;
COMMIT TRANSACTION;
GO
*/

-- 3) воспроизводимое чтение (repeatable read)

-- На данном уровне изоляции запрещается изменение данных между двумя операциями чтения в одной транзакции. 
-- Здесь происходит запрет на так называемое «неповторяющееся чтение». 
-- Другими словами, если в одной транзакции есть несколько операций чтения, данные будут блокированы
-- и их нельзя будет изменить в другой транзакции. 
-- Таким образом, избегается ситуация, когда вначале транзакции Вы запросили данные, провели их анализ (некое вычисление),
-- в конце транзакции запросили те же самые данные, а они уже отличаются от первоначальных,
-- так как они были изменены другой транзакцией. 

-- однако возможно фантомное чтение

-- «неповторяющееся чтение» или «Невоспроизводимое чтение» (non-repeatable read) 
-- означает, что при повторном чтении в рамках одной транзакции ранее прочитанные данные оказываются изменёнными.
/*
SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;
BEGIN TRANSACTION;
    SELECT * FROM Book;	
	WAITFOR DELAY '00:00:05';
	SELECT * FROM Book;
COMMIT TRANSACTION;
GO
*/

-- 4) 

-- Данный уровень исключает чтение «Фантомное чтение». 
-- Более низкие уровни изоляции не блокировали строки, которых еще нет в таблице, 
-- данный уровень блокирует все строки, соответствующие фильтру запроса, с которыми будет работать транзакция,
-- как существующие, так и те, что могут быть добавлены.

-- «Фантомное чтение» (phantom read) 
-- - при повторном чтении транзакция обнаруживает новые строки, вставленные другой завершенной транзакцией

/*
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION;
	SELECT * FROM Book;	
	WAITFOR DELAY '00:00:05';
	SELECT * FROM Book;
COMMIT TRANSACTION;
GO
*/